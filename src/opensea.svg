var _excluded = ["title", "titleId"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from "react";

function SvgOpensea(_ref, svgRef) {
  var title = _ref.title,
      titleId = _ref.titleId,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    width: "24pt",
    height: "24pt",
    viewBox: "0 0 24 24",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement("g", {
    id: "surface1"
  }, /*#__PURE__*/React.createElement("path", {
    style: {
      stroke: "none",
      fillRule: "nonzero",
      fill: "rgb(100%,100%,100%)",
      fillOpacity: 1
    },
    d: "M 5.917969 12.402344 L 5.972656 12.324219 L 9.09375 7.4375 C 9.140625 7.367188 9.246094 7.375 9.28125 7.453125 C 9.800781 8.621094 10.253906 10.074219 10.042969 10.980469 C 9.953125 11.351562 9.707031 11.855469 9.425781 12.324219 C 9.394531 12.390625 9.351562 12.457031 9.308594 12.519531 C 9.292969 12.550781 9.257812 12.566406 9.222656 12.566406 L 6.011719 12.566406 C 5.925781 12.566406 5.875 12.472656 5.917969 12.402344 Z M 5.917969 12.402344 "
  }), /*#__PURE__*/React.createElement("path", {
    style: {
      stroke: "none",
      fillRule: "nonzero",
      fill: "rgb(100%,100%,100%)",
      fillOpacity: 1
    },
    d: "M 19.835938 13.308594 L 19.835938 14.082031 C 19.835938 14.128906 19.808594 14.167969 19.769531 14.183594 C 19.527344 14.289062 18.699219 14.667969 18.355469 15.144531 C 17.476562 16.367188 16.808594 18.113281 15.308594 18.113281 L 9.050781 18.113281 C 6.835938 18.113281 5.039062 16.3125 5.039062 14.089844 L 5.039062 14.019531 C 5.039062 13.957031 5.089844 13.910156 5.148438 13.910156 L 8.632812 13.910156 C 8.703125 13.910156 8.753906 13.972656 8.746094 14.042969 C 8.722656 14.269531 8.765625 14.5 8.871094 14.710938 C 9.078125 15.132812 9.507812 15.394531 9.972656 15.394531 L 11.699219 15.394531 L 11.699219 14.046875 L 9.992188 14.046875 C 9.902344 14.046875 9.851562 13.945312 9.902344 13.875 C 9.921875 13.847656 9.941406 13.816406 9.964844 13.785156 C 10.125 13.554688 10.355469 13.199219 10.585938 12.792969 C 10.742188 12.519531 10.894531 12.226562 11.015625 11.933594 C 11.042969 11.878906 11.058594 11.824219 11.082031 11.769531 C 11.113281 11.675781 11.148438 11.589844 11.171875 11.503906 C 11.199219 11.429688 11.214844 11.351562 11.238281 11.277344 C 11.292969 11.027344 11.320312 10.765625 11.320312 10.492188 C 11.320312 10.386719 11.316406 10.273438 11.304688 10.167969 C 11.300781 10.050781 11.285156 9.933594 11.269531 9.816406 C 11.261719 9.710938 11.242188 9.609375 11.222656 9.5 C 11.199219 9.34375 11.160156 9.191406 11.121094 9.03125 L 11.109375 8.972656 C 11.082031 8.867188 11.054688 8.761719 11.019531 8.65625 C 10.925781 8.320312 10.808594 7.992188 10.691406 7.683594 C 10.648438 7.5625 10.601562 7.445312 10.550781 7.328125 C 10.480469 7.152344 10.402344 6.992188 10.335938 6.839844 C 10.300781 6.769531 10.273438 6.707031 10.242188 6.644531 C 10.207031 6.574219 10.175781 6.5 10.140625 6.429688 C 10.113281 6.378906 10.089844 6.328125 10.066406 6.277344 L 9.855469 5.886719 C 9.828125 5.835938 9.878906 5.773438 9.933594 5.789062 L 11.253906 6.144531 L 11.257812 6.144531 C 11.261719 6.144531 11.261719 6.148438 11.261719 6.148438 L 11.4375 6.195312 L 11.628906 6.25 L 11.699219 6.269531 L 11.699219 5.484375 C 11.699219 5.105469 12 4.800781 12.375 4.800781 C 12.5625 4.800781 12.734375 4.878906 12.855469 5 C 12.976562 5.125 13.054688 5.296875 13.054688 5.484375 L 13.054688 6.648438 L 13.195312 6.6875 C 13.207031 6.691406 13.214844 6.699219 13.226562 6.707031 C 13.261719 6.730469 13.308594 6.769531 13.371094 6.816406 C 13.421875 6.855469 13.476562 6.902344 13.539062 6.953125 C 13.667969 7.054688 13.816406 7.1875 13.984375 7.339844 C 14.027344 7.378906 14.074219 7.417969 14.113281 7.457031 C 14.324219 7.65625 14.566406 7.890625 14.796875 8.148438 C 14.859375 8.222656 14.921875 8.292969 14.988281 8.371094 C 15.050781 8.449219 15.121094 8.527344 15.175781 8.605469 C 15.253906 8.710938 15.339844 8.816406 15.410156 8.929688 C 15.449219 8.984375 15.488281 9.035156 15.519531 9.089844 C 15.613281 9.230469 15.695312 9.378906 15.777344 9.527344 C 15.808594 9.59375 15.84375 9.667969 15.871094 9.738281 C 15.960938 9.9375 16.027344 10.136719 16.074219 10.335938 C 16.085938 10.378906 16.097656 10.425781 16.101562 10.46875 L 16.101562 10.476562 C 16.117188 10.535156 16.121094 10.597656 16.125 10.664062 C 16.144531 10.867188 16.136719 11.074219 16.089844 11.277344 C 16.074219 11.367188 16.050781 11.449219 16.019531 11.535156 C 15.988281 11.621094 15.960938 11.707031 15.921875 11.792969 C 15.847656 11.960938 15.761719 12.132812 15.65625 12.292969 C 15.621094 12.351562 15.582031 12.417969 15.542969 12.472656 C 15.5 12.535156 15.457031 12.597656 15.417969 12.652344 C 15.363281 12.730469 15.304688 12.808594 15.246094 12.875 C 15.191406 12.949219 15.136719 13.019531 15.078125 13.085938 C 14.996094 13.183594 14.917969 13.277344 14.835938 13.363281 C 14.785156 13.421875 14.730469 13.480469 14.679688 13.535156 C 14.625 13.59375 14.570312 13.644531 14.523438 13.695312 C 14.441406 13.777344 14.371094 13.839844 14.3125 13.894531 L 14.175781 14.019531 C 14.15625 14.035156 14.128906 14.046875 14.105469 14.046875 L 13.054688 14.046875 L 13.054688 15.394531 L 14.375 15.394531 C 14.671875 15.394531 14.953125 15.289062 15.179688 15.097656 C 15.257812 15.027344 15.597656 14.738281 15.996094 14.292969 C 16.011719 14.277344 16.027344 14.269531 16.046875 14.261719 L 19.699219 13.207031 C 19.765625 13.1875 19.835938 13.238281 19.835938 13.308594 Z M 19.835938 13.308594 "
  })));
}

var ForwardRef = /*#__PURE__*/React.forwardRef(SvgOpensea);
export default __webpack_public_path__ + "static/media/opensea.c780a300.svg";
export { ForwardRef as ReactComponent };